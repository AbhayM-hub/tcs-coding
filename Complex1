import java.util.HashMap;
import java.util.Scanner;

public class Complex1 {

    public static boolean isPrime(int n) {
        HashMap<Integer, Boolean> mp = new HashMap<>();

        mp.put(2, true);
        mp.put(3, true);
        mp.put(5, true);
        mp.put(7, true);
        mp.put(11, true);
        mp.put(13, true);
        mp.put(17, true);
        mp.put(19, true);
        mp.put(23, true);
        mp.put(29, true);
        mp.put(31, true);
        mp.put(37, true);
        mp.put(39, true); // Note: 39 is not a prime number, consider removing this entry

        return mp.getOrDefault(n, false);
    }

    public static boolean isPerfectSquare(int n) {
        HashMap<Integer, Boolean> mp = new HashMap<>();

        mp.put(1, true);
        mp.put(4, true);
        mp.put(9, true);
        mp.put(16, true);
        mp.put(25, true);
        mp.put(36, true);

        return mp.getOrDefault(n, false);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        int[] arr = new int[n];

        int power_of_two = 1;
        int power_of_three = 1;

        for (int i = 0; i < n; i++) {
            if (isPrime(i + 1)) {
                arr[i] = power_of_two;
                power_of_two *= 2;
            } else if (isPerfectSquare(i + 1)) {
                arr[i] = power_of_three;
                power_of_three *= 3;
            } else {
                arr[i] = (i - 1 >= 0 ? arr[i - 1] : 0) + (i - 2 >= 0 ? arr[i - 2] : 0);
            }
        }

        System.out.println(arr[n - 1]);
        scanner.close();
    }
}
